// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
Light is RoomEnchantment

constants:

   include blakston.khd

resources:

   include light.lkod

   light_name_rsc = "light"
   light_icon_rsc = isunlite.bgf
   light_desc_rsc = \
      "Magical illumination fills the area where the spell is "
      "cast.  Requires nothing but a free spirit."
   light_unnecessary = "This area is already lit."
   light_on = "A magical glow suffuses through the area."
   light_off = "The light spell wears off."
   light_new_entrant = "This place is illuminated by a magical glow."  //replace by icon
   light_spell_intro = "Faren Lv. 1:  Fills an area with magical illumination."
   light_enchantment_rsc = \
      "\n\nThe %s enchantment currently adds %i light level to the area."
   light_sound = flight.ogg

classvars:

   vrName = light_name_rsc
   vrIcon = light_icon_rsc
   vrDesc = light_desc_rsc
   vrSucceed_wav = light_sound

   vrAlreadyEnchanted = light_unnecessary

   vrSpell_intro = light_spell_intro

   viSpell_num = SID_LIGHT
   viSchool = SS_FAREN
   viMana = 5
   viSpell_level = 1
   
   viChance_To_Increase = 30
   viMeditate_ratio = 10

properties:

messages:

   ResetReagents()
   {
      plReagents = $;

      return;
   }

   DoSpellEffects( who = $, iSpellPower = 0 )
   "Initiation point for the spell."
   {
      local oRoom;

      if (IsClass(who,&Room))
      {
         oRoom = who;
      }
      else
      {
         oRoom = Send(who,@GetOwner);
      }

      // global effects of the enchantment
      Send(oRoom,@SomeoneSaid,#type=SAY_MESSAGE,#string=light_on,#what=self);
      Send(oRoom,@RoomStartEnchantment,#what=self,#state=[(iSpellPower+25),who],
            #time=Send(self,@GetDuration,#iSpellPower = iSpellPower));
      Send(oRoom,@AddBaseLight,#amount=(25+iSpellpower));

      return TRUE;
   }

   GetDuration(iSpellPower=0)
   {
      local iDuration;

      iDuration = 45 + (iSpellPower*3);  /// 30 - 228 seconds
      iDuration = iDuration * 1000;      /// convert to seconds

      return random(iDuration/2,iDuration);
   }

   StartEnchantmentNewOccupant( who = $ )
   "Called on new occupants of the enchanted room."
   {
      Send(who,@MsgSendUser,#message_rsc=light_new_entrant);
      return;
   }

   EndSpell( where = $, state = $ )
   "Called when spell expires."
   {
      Send(where,@SomeoneSaid,#type=SAY_MESSAGE,#string=light_off,#what=self);
      Send(where,@AddBaseLight,#amount=(-1)*First(state));
      return;
   }

   EffectDesc(who=$)
   {
      local iState;

      iState = Send(Send(who,@GetOwner),@GetEnchantedState,#what=self);

      AddPacket(4, light_enchantment_rsc, 4, Send(self,@GetName),
                4,First(iState));

      return;
   }

   GetScrollClass()
   {
      return &LightScroll;
   }

end
////////////////////////////////////////////////////////////////////////////////
