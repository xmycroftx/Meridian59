// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


/////////////////////////////////////////////////////////////////////////////////
Burn is Drain

constants:

   include blakston.khd

   // Burns below this amount of damage (precision) won't be considered.
   BURN_DAMAGE_CUT_OFF = 100

resources:

   include burn.lkod

   burn_on = "~k~IYour clothes have caught fire!"
   burn_off  = "~k~IYou stop burning."
   burn_icon = iburn.bgf
   burn_name = "burning"

   burn_desc = \
      "Your calm and collected response to the predicament in which you "
      "currently find yourself is a testament to your admirable resolve in "
      "the face of danger.  Most people tend to run around in circles and "
      "scream when they are on fire."

   burn_sound = burning.ogg
   burn_sound_end = burning_end.ogg

classvars:

   vrIcon = burn_icon
   viShow_enchantment_icon = 0x02
   vrName = burn_name
   vrDesc = burn_desc

   vrEnchantment_On = burn_on
   vrEnchantment_Off = burn_off
   vrDrain_wav = burn_sound
   vrDrain_end_wav = burn_sound_end
   vrDrain_wav_duration = 2974

   viSpell_num = SID_BURN
   viSchool = SS_FAREN

   viLightColor = LIGHT_ORANGE

   // Fire is very much able to kill players.
   vbLethalDamageOverTime = TRUE

   viSpell_type = SPL_TYPE_ALL + SPL_TYPE_FIRE   

properties:

   // Infrastructure for burn drain effect only.
   pbCanBeLearned = FALSE

messages:

   StartBurn(who=$,source=0,strength=0,duration=0,bIllusionary=FALSE)
   "Health loss is in units of 10^-3 health points per second."
   "Duration is in milliseconds."
   {
      local iFlash, iStrength, iResistance, iIllusion;

      iIllusion = FALSE;

      if bIllusionary
      {
         iStrength = strength + (50 - Send(who,@GetIntellect))*40;
         iIllusion = GetTime();
      }
      else
      {
         // Damage may be reduced by a battler's resistance.
         iResistance = Send(who,@ResistanceCheck,#stype=viSpell_type);
         iStrength = Send(who,@GetDamageFromResistance,#what=strength,#value=iResistance);
      }

      // If our effect is too weak, ignore it.
      if (strength/100) * (duration/100) < BURN_DAMAGE_CUT_OFF
      {
         return FALSE;
      }

      // Check if we are already suffering from this effect from this caster.
      if Send(who,@SetOverTimeEffectDuration,#who=source,#what=self,
         #duration=duration,#strength=-iStrength,#illusion=bIllusionary)
      {
         return FALSE;
      }
      else
      {
         Send(who,@StartOverTimeEffect,#strength=-iStrength,#duration=duration,
               #what=self,#who=source,#state=100,#type=TYPE_HEALTH,
               #removable=REMOVE_INTERNAL,#illusion=iIllusion);
      }

      if IsClass(who,&Player)
      {
         Send(who,@MsgSendUser,#message_rsc=vrEnchantment_On);
         // Visual indication of effect.
         iFlash = Bound(iStrength / 2,100,2000);
         Send(who,@DamageTypeFlashEffect,#stype=viSpell_type,#duration=iFlash);
      }

      return TRUE;
   }

end
////////////////////////////////////////////////////////////////////////////////
