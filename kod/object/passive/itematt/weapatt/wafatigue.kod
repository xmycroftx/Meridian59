// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
WeapAttFatigue is WeaponAttribute

///////////////////////////////////////////////////////////////////////
//
//   This weapon will drain a target's vigor over time.
//
//   Form is:
//
//      [ WA_FATIGUE ]
//
///////////////////////////////////////////////////////////////////////

constants:

   include blakston.khd

resources:

   include wafatigue.lkod

   WeapAttFatigue_desc = \
      "  This sinister-looking weapon is eerily cold to touch."
   Fatigue_dm = "fatigue"
   Fatigue_worked_target = \
      "%s%s stumbles as your weapon touches %s, and looks drained of energy."
   Fatigue_info_desc = "%i%% chance to fatigue target on hit\n"

classvars:

   vrDesc = WeapAttFatigue_desc
   vrInfoDesc = Fatigue_info_desc
   viItem_Att_Num = WA_FATIGUE
   vrDM_trigger = Fatigue_dm
   vbProcRequirement = TRUE

properties:

   // Modify the object's price by percent
   piValue_modifier = 200

   piValue_power_modifier = 10

   // Percent chance the effect procs
   piEffect_percent = 15

   viFatigueStrength = 2000
   viFatigueDuration = 3000

messages:

   // Effect Functions

   ModifyDamage(damage=0,target=$,wielder=$,lData=$)
   {
      local oEffect;

      if target = $
         OR wielder = $
      {
         return damage;
      }

      if Random(1,100) < piEffect_percent
         AND Send(target,@CanFatigue)
      {
         oEffect = Send(SYS,@FindSpellByNum,#num=SID_Fatigue);
         Send(oEffect,@StartFatigue,#who=target,#source=wielder,
               #strength=viFatigueStrength,#duration=viFatigueDuration);

         Send(wielder,@MsgSendUser,#message_rsc=Fatigue_worked_target,
               #parm1=Send(target,@GetCapDef),#parm2=Send(target,@GetName),
               #parm3=Send(target,@GetHimHer));
      }

      return Damage;
   }

   // Add the spell name to the description.
   AppendDescInfo(oItem = $,compound = $, bShowAll = FALSE)
   {
      if (bShowAll
         OR Send(oItem,@GetIDStatusFromCompound,#compound=compound))
      {
         AddPacket(4,vrInfoDesc, 4,piEffect_percent);
      }
      else
      {
         // Not identified, add nothing (blank resource).
         AddPacket(4,system_blank_resource);
      }

      return;
   }

   IsMagicalEffect()
   {
      return TRUE;
   }

end
////////////////////////////////////////////////////////////////////////////////
