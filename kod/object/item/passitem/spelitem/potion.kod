// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
Potion is SpellItem

constants:

   include blakston.khd

   // * 10^-3 hp / sec (half that of a spider bite)
   POISON_HEALTHLOSS = 125
   POISON_VIGORLOSS = 100
   POISON_DURATION = 60000

resources:

   include potion.lkod

   Potion_name_rsc = "potion"
   Potion_label_name_rsc = "generic potion"
   Potion_icon_rsc = potion01.bgf
   Made_Potion_icon_rsc = potion02.bgf
   Potion_desc_rsc = "This is a glass vial of colored liquid."
   Potion_desc_crisp_rsc = \
      "This is a glass vial of colored liquid.  "
      "It smells crisp, clean and refreshing."
   Potion_bad_desc_rsc = \
      "This is a glass vial of slightly cloudy colored liquid.  "
      "A slight whiff of it is enough to turn your stomach."
   Potion_broken = "You quaff the contents of the vial in a single gulp."
   Potion_bad_drink = \
      "You choke down the foul-tasting contents of the vial, realizing almost "
      "immediately that this was a pretty bad idea.  Time has caused it to sour."
   Potion_sell_info = \
      "Be sure to drink this potion soon, dear, they go bad fairly quickly."
   Potion_has_karma_requirement = \
      "\n\nBefore drinking, make sure you have enough karma to cast the "
      "spell inside."
   Potion_gulp_sound = drkptn.ogg

classvars:

   vrLabelName = Potion_label_name_rsc
   vrBadDesc = Potion_bad_desc_rsc
   vrDesc = Potion_desc_rsc
   vrBroken = Potion_Broken
   vrWorked = $
   vrKarmaDesc = Potion_has_karma_requirement
   viBulk = 20
   viWeight = 20
   viValue_average = 60
   viFilling = 10
   viItem_type = ITEMTYPE_POTION | ITEMTYPE_SUNDRY
   viUse_type = ITEM_SINGLE_USE
   viPoisonPercent = 0
   viGoBadDamage = 0
   vbNoBrokenView = TRUE
   viGround_Group = 1
   viHits_init_min = 1
   viHits_init_max = 1

properties:

   vrName = Potion_name_rsc
   vrIcon = Potion_icon_rsc
   vrBroken = Potion_broken
   piMinSpellPower = 20
   piMaxSpellPower = 60

   // No more potion expiration
   piGoBadTime = -1

messages:

   Constructor(maker=$)
   {
      if maker <> $
      {
         vrIcon = Made_Potion_icon_rsc;
      }

      propagate;
   }

   ReqNewApply(what=$,apply_on=$)
   {
      if NOT Send(apply_on,@ReqEatSomething,#filling=viFilling)
      {
         return FALSE;
      }

      if what <> apply_on
      {
         return FALSE;
      }

      propagate;
   }

   NewApplied(what=$,apply_on=$)
   {
      local oSpell;

      if IsClass(apply_on,&User)
      {
         Send(apply_on,@WaveSendUser,#wave_rsc=Potion_gulp_sound);
         // Send the 'broken'/consumed message here, and an optional
         // 'worked' flavor text.
         Send(apply_on,@MsgSendUser,#message_rsc=vrBroken,
               #parm1=Send(self,@GetCapDef),
               #parm2=Send(self,@GetName));
         if (vrWorked <> $)
         {
            Send(apply_on,@MsgSendUser,#message_rsc=vrWorked);
         }
      }

      if pbBad
      {
         Send(apply_on,@MsgSendUser,#message_rsc=Potion_bad_drink);
         // do some damage!
         if Send(apply_on,@AssessDamage,#report=FALSE,#what=what,
                 #damage=(viGoBadDamage*Random(8,12)/10),
                 #stype=SPL_TYPE_ACID) = $
         {
            Send(what,@KilledSomething,#what=apply_on);
         }
         else if Random(1,100) <= viPoisonPercent
         {
            oSpell = Send(SYS,@FindSpellByNum,#num=SID_POISON);
            Send(oSpell,@StartPoison,#source=apply_on,#who=apply_on,
                 #healthloss=(POISON_HEALTHLOSS*Random(8,12)/10),
                 #vigorloss=(POISON_VIGORLOSS*Random(8,12)/10),
                 #duration=(POISON_DURATION*Random(8,12)/10));
         }

         Send(self,@Delete);

         return;
      }

      Send(apply_on,@EatSomething,#nutrition=0,#filling=viFilling);

      propagate;
   }

   SendBrokenMessage()
   "Potions don't send anything on last charge consumed."
   {
      return;
   }

   IsBeverage()
   {
      return TRUE;
   }

   DoFailure(what=$)
   {
      // Overriding because the superclass gives a "broken" message.  Oops.
      return;
   }

   SetPotionFlags()
   "This can be used to fix potions that have their "
   "viObject_flags set to OF_APPLYABLE."
   {
      if viObject_flags = (OF_GETTABLE | OF_APPLYABLE)
      {
         viObject_flags &= ~OF_APPLYABLE;
      }

      return;
   }

end
////////////////////////////////////////////////////////////////////////////////
