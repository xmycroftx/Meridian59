// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
WallofLightning is ActiveWallElement

constants:

   include blakston.khd

resources:

   include wallltng.lkod

   WallofLightning_name_rsc = "wall of lightning"
   WallofLightning_icon_rsc = wolightn.bgf
   WallofLightning_desc_rsc = \
      "The wall of lightning crackles dangerously, almost as if hoping you "
      "would walk into it."

   lightningwall_damage0 = "You walk through the wall of lightning without incident."
   lightningwall_damage5 = \
      "Surely one day man will come up with a use for lightning other than "
      "zapping the heck out of you."
   lightningwall_damage10 = "Whoa that tingles!!"
   lightningwall_damage15 = "Whoooooiiee, that'll wake you up in the morning!"
   lightningwall_damage20 = "So THAT'S what that feels like."

   lightningwall_dissipates = "Part of the lightning wall flickers, and disappears."

classvars:

   vrName = WallofLightning_name_rsc
   vrIcon = WallofLightning_icon_rsc
   vrdesc = WallofLightning_desc_rsc

   viObject_flags = OF_NOEXAMINE

   vrDissipateMessage = lightningwall_dissipates
   vrUnaffectedMessage = lightningwall_damage0

   // How many ms should the effect last at max spellpower?
   viEffectDuration = 500

   // How much damage (10^[-3]) should the effect do per second at max spellpower?
   viEffectDamage = 12000

properties:

   piDrawEffectFlag = OF_FLICKERING
   piDrawFx = DRAWFX_TRANSLUCENT_50

messages:

   DoEffect(what = $)
   {
      local oEffect, iSpellpower, iStrength, rMessage, bReport;

      oEffect = Send(SYS,@FindSpellByNum,#num=SID_ELECTRIFY);

      iSpellpower = Nth(plSeed,2);

      iStrength = iSpellpower*viEffectDamage/100;

      bReport = Send(oEffect,@StartElectrify,#who=what,#source=poCaster,
         #strength=iStrength,#duration=viEffectDuration);

      if bReport
      {
         Send(poOwner,@SomethingAttacked,#what=poCaster,#victim=what,
               #use_weapon=self,#stroke_obj=self);

         if IsClass(poCaster,&Player)
         {
            Send(poCaster,@SetPlayerFlag,#flag=PFLAG_DID_DAMAGE,#value=TRUE);
         }

         if IsClass(what,&Player)
         {
            if iSpellpower = 0
            {
               rMessage = lightningwall_damage0;
            }
            else if iSpellpower < 25
            {
               rMessage = lightningwall_damage5;
            }
            else if iSpellpower < 50
            {
               rMessage = lightningwall_damage10;
            }
            else if iSpellpower < 75
            {
               rMessage = lightningwall_damage15;
            }
            else
            {
               rMessage = lightningwall_damage20;
            }

            Send(what,@MsgSendUser,#message_rsc=rMessage);
         }
      }

      propagate;
   }

   SendAnimation()
   {
      AddPacket(1,ANIMATE_CYCLE, 4,Random(100,140), 2,1, 2,5);

      return;
   }

   SendLightingInformation()
   {
      // Flags, intensity (5 out of 255), color.
      AddPacket(2,(LIGHT_FLAG_ON | LIGHT_FLAG_DYNAMIC),
                1,5, 2,LIGHT_LIGHTNING);

      return;
   }

end
////////////////////////////////////////////////////////////////////////////////
