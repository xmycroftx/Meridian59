// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
AvarChieftain is Monster

constants:

   include blakston.khd

   // Fire bow animation.  Normal attack animation with claws is anim_attack.
   ANIM_FIRE = 2

   FRAME_STAND = 1
   FRAME_WALK_START = 2
   FRAME_WALK_END = 6
   FRAME_ATTACK_START = 7
   FRAME_ATTACK_END = 11
   FRAME_FIRE_START = 12
   FRAME_FIRE_END = 16

resources:

   include avchief.lkod

   avarchief_koc_name_rsc = "koavar"
   avarchief_default_name = "avar chieftain"
   avarchief_icon_rsc = avchief.bgf

   avarchief_name_rsc = "peet-seeeep avar chieftain"    /// default
   avarchief_desc_rsc = \
      "Known for their noble grace, the Peet-Seeeep tribe "
      "efficiently controls the south-eastern shores of the island.  This "
      "clan leader is feared for its keen accuracy with a bow and deadly "
      "slasher."

   avarchief_nomagic_name = "kyip-kyip-kreeet avar chieftain"
   avarchief_nomagic_desc = \
      "Known for their brutal instincts, the Kyip-Kyip-Kreeet tribe "
      "relentlessly lords over the north-western shores of the island.  This "
      "clan leader is feared for its keen accuracy with a bow and deadly "
      "slasher."

   avarchief_bone_name = "avar leader of the bone faction"
   avarchief_bone_desc = \
      "Dedicated to preserving the ancient ways of the Bone faction, this "
      "clan leader is feared for its keen accuracy with a bow and deadly "
      "slasher."

   avarchief_dead_icon_rsc = avchiefX.bgf
   avarchief_dead_name_rsc = "former avar chieftain"

   avarchief_sound_hit = ac_atkh.ogg
   avarchief_sound_miss = ac_atkm.ogg
   avarchief_sound_death = ac_dth.ogg
   avarchief_sound_aware = ac_awr.ogg

   avarchief_arrow = arrow.bgf

   avarchief_fire_misses = \
      "The avar chieftain cocks and fires, narrowly missing you."
   avarchief_fire_hits = \
      "The chieftain's well-aimed arrow strikes you with pinpoint accuracy!"

classvars:

   vrKocName = avarchief_koc_name_rsc
   vrIcon = avarchief_icon_rsc
   
   vrDead_icon = avarchief_dead_icon_rsc
   vrDead_name = avarchief_dead_name_rsc

   viIndefinite = ARTICLE_AN
   viTreasure_type = TID_AVAR_CHIEF
   viAttack_type = ATK_TYPE_PIERCE
   viSpeed = SPEED_FAST
   viDefault_behavior = AI_FIGHT_AGGRESSIVE | AI_MOVE_OPTIMAL_RANGE
   viLevel = 135
   viDifficulty = 9
   viVisionDistance = 28

   // Attack range of 192, or 3 row/col.
   viMeleeRange = 192
   viFireRange = 640

   viMeleePriority = 500
   viMovePriority = 550
   viFirePriority = 600

   viKarma = 85
   viCashmin = 650
   viCashmax = 2000

   vrSound_hit = avarchief_sound_hit
   vrSound_miss = avarchief_sound_miss
   vrSound_aware = avarchief_sound_aware
   vrSound_death = avarchief_sound_death

   vbCanSiphon = FALSE

properties:

   vrName = avarchief_name_rsc
   vrDesc = avarchief_desc_rsc

   piAnimation = ANIM_NONE

messages:

   Constructor(clan = $)
   {
      if clan <> $
      {
         Send(self,@SetClan,#clan=clan);
      }
      else
      {
         Post(self,@ChooseClan);
      }

      propagate;
   }

   Constructed()
   {
      plResistances = [ [-SPL_TYPE_FIRE, 40 ],
                        [-SPL_TYPE_SHOCK, 20],
                        [-SPL_TYPE_ACID, -15 ],
                        [-SPL_TYPE_COLD, -20 ],
                        [ATK_TYPE_SLASH, 10 ],
                        [ATK_TYPE_NERUDITE, -15 ]
                      ];

      propagate;
   }

   SetClan(clan = AVARCLAN_PROMAGIC)
   {
      piColor_translation = clan;

      switch(clan)
      {
         case AVARCLAN_ANTIMAGIC:
            vrName = avarchief_nomagic_name;
            vrDesc = avarchief_nomagic_desc;
            piReputationGroup = REP_KKAVAR;
            plReputationEnemies = [REP_PSAVAR, REP_CTAVAR];
            break;

         case AVARCLAN_BONE_FACTION:
            vrName = avarchief_bone_name;
            vrDesc = avarchief_bone_desc;
            piReputationGroup = REP_CTAVAR;
            plReputationEnemies = [REP_PSAVAR, REP_KKAVAR];
            break;

         default:
            vrName = avarchief_name_rsc;
            vrDesc = avarchief_desc_rsc;
            piReputationGroup = REP_PSAVAR;
            plReputationEnemies = [REP_KKAVAR, REP_CTAVAR];
            break;
      }

      if poOwner <> $
      {
         Send(poOwner,@SomethingChanged,#what=self);
      }

      return;
   }

   GetClan()
   {
      return piColor_translation;
   }

   ChooseClan()
   {
      if poOwner = $ OR NOT IsClass(poOwner,&KCForest)
      {
         if Random (1,5) > 1
         {
            Send(self,@SetClan,#clan=random(PT_PURPLETOBLUE,PT_PURPLETOYELLOW));
         }

         return;
      }

      // Ask our owner what clan we should be in.
      Send(self,@SetClan,#clan=Send(poOwner,@GetClan));

      return;
   }

   GetName()
   {
      if poOwner = $
      {
         return avarchief_default_name;
      }

      propagate;
   }

   // You cannot parry the chief's attacks.
   CanParry()
   {
      return FALSE;
   }

   SendMoveAnimation()
   {
      if (piColor_Translation <> 0)
      {
         AddPacket(1,ANIMATE_TRANSLATION,1,piColor_Translation);
      }

      AddPacket(1,ANIMATE_CYCLE,4,200,2,FRAME_WALK_START,2,FRAME_WALK_END);

      return;
   }

   SendAnimation()
   {
      if (piColor_Translation <> 0)
      {
         AddPacket(1,ANIMATE_TRANSLATION,1,piColor_Translation);
      }

      if piAnimation = ANIM_ATTACK
      {
         AddPacket(1,ANIMATE_ONCE,4,200,2,FRAME_ATTACK_START,2,
                   FRAME_ATTACK_END,2,FRAME_STAND);

         return;
      }

      if piAnimation = ANIM_FIRE
      {
         AddPacket(1,ANIMATE_ONCE,4,200,2,FRAME_FIRE_START,2,
                   FRAME_FIRE_END,2,FRAME_STAND);

         return;
      }

      // If no body animation
      AddPacket(1,ANIMATE_NONE,2,3);

      return;
   }

   DoMissileAnimation()
   {
      piAnimation = ANIM_FIRE;
      Send(poOwner,@SomethingChanged,#what=self);
      piAnimation = ANIM_NONE;
      Send(poOwner,@SomethingShot,#who=self,#target=poTarget,#projectile=self);

      return;
   }

   GetProjectileSpeed()
   {
      return 15;
   }

   SendProjectileAnimation()
   {
      AddPacket(1,ANIMATE_NONE,2,1);

      return;
   }

   GetProjectileIcon()
   {
      return avarchief_arrow;
   }

   GetProjectileLightFlags()
   {
      // No lighting information.
      return LIGHT_FLAG_NONE;
   }

   IsAlliedClass(what=$)
   {
      if (IsClass(what,&Avar)
            OR IsClass(what,&AvarShaman)
            OR IsClass(what,&AvarChieftain))
         AND (Send(what,@GetClan) = Send(self,@GetClan))
      {
         return TRUE;
      }

      return FALSE;
   }

   SpecialHatredBehavior(what=$)
   {
      // Avars attack other avars of other clans, but only in the
      //  temple of riija ruins (rid_KC3).
      if IsClass(what,&AvarShaman)
         OR IsClass(what,&AvarChieftain)
         OR IsClass(what,&Avar)
      {
         if poOwner <> $ AND Send(poOwner,@GetRoomNum) = RID_KC3
            AND Send(what,@GetClan) <> Send(self,@GetClan)
         {
            return 250;
         }
      }

      return 0;
   }

   GetTreasureType()
   {
      if poOwner <> $ AND Send(poOwner,@GetRoomNum) = RID_KC3
      {
         return TID_NONE;
      }

      return viTreasure_type;
   }

   CreateTreasure(who=$,corpse=$)
   {
      local oTreasure, iNumber;

      // Apparitions, etc, provide no treasure
      if pbIllusion
      {
         return;
      }

      oTreasure = Create(&NeruditeArrow,#corpse=corpse);
      iNumber = Random(25,45);
      Send(oTreasure,@AddNumber,#number=iNumber);

      if Send(poOwner,@ReqNewHold,#what=oTreasure,#new_row=piRow,#new_col=piCol)
      {
         Send(poOwner,@NewHold,#what=oTreasure,
               #new_row=piRow,#new_col=piCol,
               #fine_row=piFine_row,#fine_col=piFine_col);
      }
      else
      {
         Send(oTreasure,@Delete);
      }

      propagate;
   }

   CreateDeadBody(killer=$)
   {
      local oBody;

      oBody = $;
      if vrDead_icon <> $
      {
         oBody = Create(&DeadBody,
                        #victim=self,
                        #killer=killer,
                        #BodyTranslation=Send(self,@GetClan),
                        #drawfx=viDead_drawfx);
      }

      return oBody;
   }

end
////////////////////////////////////////////////////////////////////////////////
