// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
Wolf is Monster

constants:

   include blakston.khd

resources:

   include wolf.lkod

   wolf_koc_name_rsc = "ixleocwolf"
   wolf_name_rsc = "wolf"
   wolf_icon_rsc = wolf.bgf
   wolf_desc_rsc = \
    "This shaggy animal stares at you hungrily, baring its teeth and licking its chops.  "
    "Its eerie howl sends a chill down your spine, as it prepares to pounce and attack.  "
    "Since these beasts are quite intelligent, those who foolishly decide to take on a "
    "pack of them will have to keep their backs covered to avoid being flanked."
   wolf_dead_icon_rsc = wolfX.bgf
   wolf_dead_name_rsc = "dead wolf"

   wolf_sound_hit = wolf_atkh.ogg
   wolf_sound_miss = wolf_atkh.ogg
   wolf_sound_death = wolf_dth.ogg
   wolf_sound_aware = wolf_awr.ogg

classvars:

   vrKocName = wolf_koc_name_rsc
   vrName = wolf_name_rsc
   vrIcon = wolf_icon_rsc
   vrDesc = wolf_desc_rsc
   vrDead_icon = wolf_dead_icon_rsc
   vrDead_name = wolf_dead_name_rsc

   viSpeed = SPEED_VERY_FAST
   viAttack_type = ATK_TYPE_BITE
   viDefault_behavior = AI_FIGHT_AGGRESSIVE | AI_MOVE_FLEE_FRIGHTENERS
   viSocial = 1
   viLevel = 75
   viDifficulty = 8
   // Attack range of 192, or 3 row/col.
   viMeleeRange = 192
   viKarma = 60
   viCashmin = 175
   viCashmax = 375
   vrSound_hit = wolf_sound_hit
   vrSound_miss = wolf_sound_miss
   vrSound_aware = wolf_sound_aware
   vrSound_death = wolf_sound_death

   viBleedChance = 20
   viBleedStrength = 3000
   viBleedDuration = 3000

   vbCanSiphon = FALSE

properties:

   viTreasure_type = TID_ZOMBIE
   piAnimation = ANIM_NONE

messages:

   Constructed()
   {
      plResistances = [ [-SPL_TYPE_UNHOLY, 50 ],
                        [-SPL_TYPE_HOLY, -25 ] ];
      propagate;
   }

   SendLookAnimation()
   {
      AddPacket(1,ANIMATE_CYCLE, 4,200,2,2,2,3);

      return;
   }

   SendMoveAnimation()
   {
      // Cycle through "walking" bitmaps (groups 2-5) at 50 milliseconds per frame
      AddPacket(1,ANIMATE_CYCLE,4,31,2,1,2,12);

      return;
   }

   SendAnimation()
   {
      if piAnimation = ANIM_ATTACK
      {
         AddPacket(1,ANIMATE_ONCE,4,28,2,13,2,18,2,1);

         return;
      }

      // if no body animation
      propagate;
   }

   CanMorphTo()
   {
      return FALSE;
   }

end
////////////////////////////////////////////////////////////////////////////////
