// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
OrcPitBoss is Monster

constants:

   include blakston.khd

   FRAME_STAND = 1
   FRAME_WALK_START = 2
   FRAME_WALK_END = 6
   FRAME_ATTACK_START = 7
   FRAME_ATTACK_END = 12
   ANIMSPEED_WALK = 125
   ANIMSPEED_ATTACK = 125

resources:

   include orcboss.lkod

   OrcPitBoss_koc_name_rsc = "koutom"
   OrcPitBoss_name_rsc = "orc pit boss"
   OrcPitBoss_icon_rsc = OrcPitB.bgf
   OrcPitBoss_desc_rsc = \
      "In order to gain the ominous title and station of Pit Boss, "
      "this orc had to battle and slay over one hundred other of its "
      "kind.  In the caves, there is no more formidable warrior, "
      "determined leader or grisly adversary than the horrendous Pit Bosses."

   OrcPitBoss_dead_icon_rsc = OrcPitbX.bgf
   OrcPitBoss_dead_name_rsc = "dead orc pit boss"

   OrcPitBoss_sound_hit = orc_atkh.ogg
   OrcPitBoss_sound_miss = orc_atkm.ogg
   OrcPitBoss_sound_death = por_dth.ogg
   OrcPitBoss_sound_aware = por_awr.ogg

classvars:

   viIndefinite = ARTICLE_AN
   vrKocName = OrcPitBoss_koc_name_rsc
   vrName = OrcPitBoss_name_rsc
   vrIcon = OrcPitBoss_icon_rsc
   vrDesc = OrcPitBoss_desc_rsc
   vrDead_icon = OrcPitBoss_dead_icon_rsc
   vrDead_name = OrcPitBoss_dead_name_rsc

   viTreasure_type = TID_ORC_CHIEF

   viSpeed = SPEED_FAST
   viAttack_type = ATK_TYPE_SLASH
   viAttributes = 0
   viLevel = 115
   viDifficulty = 7
   viVisionDistance = 30
   // Attack range of 192, or 3 row/col.
   viMeleeRange = 192
   viBonusSwing = 100
   viKarma = -90
   viDefault_behavior = AI_FIGHT_AGGRESSIVE | AI_FIGHT_HYPERAGGRESSIVE | AI_FIGHT_SWITCHALOT
   viCashmin = 1000
   viCashmax = 4500

   viWimpy = 0

   vrSound_hit = OrcPitBoss_sound_hit
   vrSound_miss = OrcPitBoss_sound_miss
   vrSound_aware = OrcPitBoss_sound_aware
   vrSound_death = OrcPitBoss_sound_death

   viBleedChance = 45
   viBleedStrength = 1000
   viBleedDuration = 5000

   // Very used to dark places.
   viNightVision = 200

properties:

   piAnimation = ANIM_NONE
   piReputationGroup = REP_ORC

   piMana = 3000
   piMax_mana = 30

messages:

   Constructed()
   {
      plResistances = [ [-SPL_TYPE_ALL, 40 ],
                        [-SPL_TYPE_UNHOLY, 40 ],
                        [ATK_TYPE_PIERCE, 40 ],
                        [ATK_TYPE_SLASH, 20 ],
                        [ATK_TYPE_MAGIC, -25 ],
                        [-SPL_TYPE_HOLY, -50 ] ];

      plReputationEnemies = [REP_PSAVAR, REP_KKAVAR, REP_CTAVAR];

      plActions = [ [SID_REFLECTION,0,0,99] ];

      propagate;
   }

   // Used for defense messages
   GetParryAbility(stroke_obj=$)
   {
      if (stroke_obj <> $) and not Send(stroke_obj,@CanParry)
      {
         return 0;
      }

      return (viDifficulty*10);
   }

   DoMeleeAttack(swings=0)
   "Orc Pit Boss does a double attack by default."
   {
      Send(Self,@DoMeleeAnimation);

      return;
   }

   SendLookAnimation()
   {
      /// Walk animation
      AddPacket(1,ANIMATE_CYCLE,4,ANIMSPEED_WALK,
                2,FRAME_WALK_START,2,FRAME_WALK_END);

      return;
   }

   SendMoveAnimation()
   {
      // Make it look like OrcPitBoss is walking
      // Cycle through "walking" bitmaps (groups 2-6) at 50 ms per frame
      AddPacket(1,ANIMATE_CYCLE,4,ANIMSPEED_WALK,
                2,FRAME_WALK_START,2,FRAME_WALK_END);

      return;
   }

   SendAnimation()
   {
      if piAnimation = ANIM_ATTACK
      {
         AddPacket(1,ANIMATE_ONCE,4,ANIMSPEED_ATTACK,
               2,FRAME_ATTACK_START,2,FRAME_ATTACK_END,2,FRAME_STAND);

         return;
      }

      // if no body animation.
      propagate;
   }

   CreateDeadBody(killer=$)
   {
      local oBody;

      oBody = Create(&OrcPitBossBody);

      return oBody;
   }

   DMCanArmageddon()
   {
      return FALSE;
   }

   CanEvilTwin()
   {
      return FALSE;
   }

   IsAlliedClass(what=$)
   {
      if IsClass(what,&Orc)
         OR IsClass(what,&OldOrc)
         OR IsClass(what,&CaveOrc)
         OR IsClass(what,&OrcWizard)
      {
         return TRUE;
      }

      propagate;
   }
   
   IsArenaMonster()
   {
      return FALSE;
   }

end
////////////////////////////////////////////////////////////////////////////////
